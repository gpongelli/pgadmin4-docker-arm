name: Python 3.8 - Build ARMv7 architecture

# cross compilation article https://medium.com/@artur.klauser/building-multi-architecture-docker-images-with-buildx-27d80f7e2408
#  examples form dockerhub https://docs.docker.com/build/ci/github-actions/examples/

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write


jobs:
  docker_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#caching-packages
      - name: Install Poetry
        run: pipx install poetry

      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --with devel  --sync

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # setup cross compilation action https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # login to docker action, to then push (in this case into python script) https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # in case of static docker image building, https://github.com/marketplace/actions/docker-build-push-action
      #  github action is better  ( https://github.com/docker/build-push-action )
      #- name: build docker pyth3.10
      #  run: |
      #    poetry run python build_versions.py

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.3.0
        with:
          push: true
          tags: gpongelli/pgadmin4-docker-armv7:py3.8-alpine3.16
          file: dockerfile_py38_alpine
          platforms: linux/arm/v7