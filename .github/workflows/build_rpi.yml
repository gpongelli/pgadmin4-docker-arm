name: Build for ARMv7 architecture

# cross compilation article https://medium.com/@artur.klauser/building-multi-architecture-docker-images-with-buildx-27d80f7e2408
#  examples form dockerhub https://docs.docker.com/build/ci/github-actions/examples/

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    tags:
      - '*.*.*'
  schedule:
    - cron: '30 3 10 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write


jobs:
  docker_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    outputs:
      cmt_msg: ""

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT_TOKEN }}

      # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#caching-packages
      - name: Install Poetry
        run: pipx install poetry

      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --with devel  --sync

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # setup cross compilation action https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # login to docker action, to then push (in this case into python script) https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # in case of static docker image building, https://github.com/marketplace/actions/docker-build-push-action
      #  github action is better  ( https://github.com/docker/build-push-action )
      - name: build docker images
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          poetry run python build_versions.py

      #  upload readme.md to dockerhub https://github.com/peter-evans/dockerhub-description
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: gpongelli/pgadmin4-docker-armv7

      - name: Get Date
        id: get_date
        uses: Kaven-Universe/github-action-current-date-time@v1
        with:
          format: "YYYY_MM_DD"

      - name: Setting global variables
        uses: actions/github-script@v6
        id: set_cmt_message
        with:
          script: |
            core.setOutput('cmt_msg', '[ci skip] Cron execution on ${{ steps.get_date.outputs.year }}-${{ steps.get_date.outputs.month }}-${{ steps.get_date.outputs.day }}');

      - name: add new version to git
        uses: EndBug/add-and-commit@v9.1.1
        with:
          add: 'versions.json README.md Dockerfile'
          author_name: ${{ secrets.GH_NAME }}
          author_email: ${{ secrets.GH_EMAIL }}
          message: ${{ steps.set_cmt_message.outputs.cmt_msg }}
          push: 'origin main --force'
